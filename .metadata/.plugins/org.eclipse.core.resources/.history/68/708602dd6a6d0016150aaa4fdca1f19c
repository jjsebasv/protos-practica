import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.nio.charset.Charset;
import java.util.Date;
import java.util.function.Consumer;

public class Logger implements Log {
	
	OutputStream os;
	ByteArrayOutputStream bos;
	
	Logger (String fileName) throws IOException {
		File logger = new File(fileName);
		logger.createNewFile();
		os = new ObjectOutputStream(new FileOutputStream(logger, true));
	}
	
	@Override
	public void warning(String msg) {
		try {
			createMessage(msg, Level.warning);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	@Override
	public void info(String msg) {
		try {
			createMessage(msg, Level.info);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	private void createMessage (String msg, Level lvl) throws IOException {
		Message m = new mFile(msg, lvl, new Date());
		//os.writeObject(m); -> throws NotSerializableException
		os.write(m.toString().getBytes(Charset.forName("UTF-8")));
		os.write('\n');
	}

	@Override
	public void read(InputStream input, Consumer<Message> consumer) {
		// TODO Auto-generated method stub
		byte[] b = new byte[50];
		try {
			int i = input.read();
			for(int j = 0 ; j < b.length && i != -1; i = input.read(), j++){
				b[j] = (byte) i;
				if(i == '\n') {
					StreamReader sr = new StreamReader();
					sr.releaser(b);
					b = new byte[50];
					j = 0;
				}
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		
		try {
			input.read();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		consumer.accept(new mFile(b));
	}

}
